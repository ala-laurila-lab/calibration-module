classdef CalibrationPersistence < io.mpa.Persistence
    
    enumeration
        
        INTENSITY_MEASUREMENT([...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('calibrationDate') ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('ledType') ...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('wavelength')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('wavelengthExponent')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('responsivity')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('diameterX')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('diameterY')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('diameterExponent')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('spotFocus')...
            io.mpa.H5DataType.SIMPLE_DOUBLE_ATTR.map('spotFocusExponent')...
            io.mpa.H5DataType.SIMPLE_INTEGER_ATTR.map('note')...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('voltages') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('voltageExponent') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('powers') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('powerExponent') ...
            ])
        
        LINEARITY_MEASUREMENT([...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('calibrationDate') ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('stimulsType') ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('ledType') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('voltages') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('voltageExponent') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('cmeans') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('cstds') ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('info') ...
            ])
        
        NDF_MEASUREMENT([...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('calibrationDate') ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('ndfName') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('voltages') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('voltageExponent') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('powers') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('powerExponent') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('referenceVoltages') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('referencePowers') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('referencePowerExponent') ...
            ])
        
        SPECTRAL_MEASUREMENT([...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('calibrationDate') ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('ledType') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map('wavelength') ...
            io.mpa.H5DataType.COMPOUND_DOUBLE_DATASET.map(entity.SpectralMeasurement.KEY_STRING_PREFIX) ...
            io.mpa.H5DataType.SIMPLE_STRING_ATTR.map('dynamicSchema') ...
            ])
    end
end

